{
    /**
    *  tsconfig.json 是 ts 编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
       "include" 用来指定哪些ts文件需要编译
           路径： ** 表示任意目录
                  * 表示任意文件
        "extends" 定义被继承的配置文件
    */
    "include": [
        "./src/**/*"
    ],
    // "exclude": [
    //     "./src/test/**/*"
    // ]
    // "extends": "",
    /**
        compilerOptions编译器选项
    */ 
    "compilerOptions": {
        // target 指定ts被编译为的ES的版本
        // 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext'.
        "target": "es5",
        // 指定要使用的模块化的规范
        // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'.
        "module": "amd",
        // lib 用来指定项目中要使用的库  一般不用指定
        /**
            'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext', 
            'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'scripthost', 'es2015.core', 
            'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 
            'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 
            'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 
            'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 
            'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.promise', 'es2020.string', 'es2020.symbol.wellknown', 
            'es2020.intl', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 
            'esnext.string', 'esnext.promise'.
        */ 
        // "lib": ["es5"]

        // 指定编译后文件所在的目录
        "outDir": "./dist",

        // 将代码合并为一个文件
        // 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中 不常用
        // "outFile": "./dist/app.js",

        // 是否对js文件进行编译，默认false
        // "allowJs": true,
        // 是否检查js代码，是否符合语法规范，默认false
        // "checkJs": true,

        // 是否移除注释
        "removeComments": true,

        // 不生成编译后的文件
        "noEmit": false,

        // 当有错误时，不生成编译后的文件
        "noEmitOnError": false,

        // 所有严格检查的总开关
        "strict": true,

        // 用来设置编译后的文件是否使用严格模式，默认false
        "alwaysStrict": true,

        // 不允许隐式的any类型
        "noImplicitAny": false,

        // 不允许不明确类型的this
        "noImplicitThis": false,

        // 严格的检查空值
        "strictNullChecks": true,

    }
}